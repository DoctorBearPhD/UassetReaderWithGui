<UserControl x:Class="UassetReaderWithGui.View.MockGuiView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:vmpt="clr-namespace:UassetReaderWithGui.ViewModel.Uasset.PropertyTypes"
             xmlns:vmcon="clr-namespace:UassetReaderWithGui.ViewModel.Controls"
             xmlns:converters="clr-namespace:UassetReaderWithGui.WpfUtil.Converters"
             xmlns:util="clr-namespace:UassetReaderWithGui.WpfUtil"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:UassetReaderWithGui.View"
             mc:Ignorable="d" 
             d:DesignHeight="800" d:DesignWidth="1600"
             DataContext="{Binding Path=MockGui, Source={StaticResource Locator}}">

    <UserControl.Resources>
        <converters:IntToHexStringConverter x:Key="int2HexConv" />
        <converters:IntToHexFormattedStringConverter x:Key="int2FormattedHexConv" />
        <converters:FloatToHexFormattedStringConverter x:Key="float2FormattedHexConv" />

        <Style x:Key="treeViewItemStyle" TargetType="TreeViewItem">
            <Setter Property="IsExpanded" Value="True"/>
            <Setter Property="Padding" Value="4" />
            <Setter Property="BorderBrush" Value="LightGray" />
            <Setter Property="BorderThickness" Value="1" />
        </Style>

    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="6" />
            <RowDefinition />
        </Grid.RowDefinitions>
        
        <Grid.Resources>
            <Style TargetType="ListViewItem">
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            </Style>
            <Style TargetType="Label">
                <Setter Property="Background" Value="#EEE" />
            </Style>
            <Style TargetType="GridSplitter">
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="VerticalAlignment"   Value="Stretch" />
                <Setter Property="BorderBrush" Value="LightGray" />
                <Setter Property="BorderThickness" Value="1,0" />
            </Style>
        </Grid.Resources>

        <ScrollViewer VerticalScrollBarVisibility="Disabled" HorizontalScrollBarVisibility="Auto" Grid.Column="0" Grid.Row="0">
                <Grid DockPanel.Dock="Left" >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition />
                    </Grid.RowDefinitions>

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="5" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="5" />
                        <ColumnDefinition />
                        <ColumnDefinition Width="5" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>


                    <!-- StringList -->
                    <Label Grid.Column="0" Grid.Row="0" MinWidth="150">
                        <TextBlock>
                            <Run Text="String List (" />
                            <TextBlock Text="{Binding Path=UassetFileVM.StringList.Count}" />
                            <Run>//</Run>
                            <TextBlock Text="{Binding Path=UassetFileVM.StringList.Count, Converter={StaticResource int2FormattedHexConv}}" />
                            <Run>)</Run>
                        </TextBlock>
                    </Label>
                    <ListView ItemsSource="{Binding Path=UassetFileVM.StringList}" Grid.Column="0" Grid.Row="1">
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Header="ID" Width="30">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=Id, Converter={StaticResource int2HexConv}}" 
                                                       TextAlignment="Right" FontWeight="Bold" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="String" DisplayMemberBinding="{Binding Path=Value}" />
                            </GridView>
                        </ListView.View>
                    </ListView>

                    <GridSplitter Grid.Column="1" Grid.RowSpan="99" />

                    <!-- Pointer List -->
                    <Label Content="Pointers" Grid.Column="2" Grid.Row="0" />
                    <ListView ItemsSource="{Binding Path=PointerList.Items}" Grid.Column="2" Grid.Row="1">
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                <Setter Property="VerticalContentAlignment"  Value="Stretch"/>
                            </Style>
                        </ListView.ItemContainerStyle>

                        <ListView.Resources>
                            <Style x:Key="borderStyle" TargetType="Border">
                                <Setter Property="BorderBrush" Value="LightGray" />
                                <Setter Property="BorderThickness" Value="0,1" />
                                <Setter Property="Margin" Value="-6,-3" />
                            </Style>
                        </ListView.Resources>

                        <ListView.View>
                            <GridView>
                                <GridViewColumn Header="Pointer">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Border Style="{StaticResource borderStyle}">
                                                <TextBlock Text="{Binding Path=Header}" Margin="6,3"/>
                                            </Border>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Value" Width="Auto">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Border Style="{StaticResource borderStyle}">
                                                <TextBlock Text="{Binding Path=Value, Converter={StaticResource int2FormattedHexConv}}" 
                                                            FontFamily="Courier New" Margin="6,3" VerticalAlignment="Center" />
                                            </Border>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Location" Width="Auto">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Border Style="{StaticResource borderStyle}">
                                                <TextBlock Text="{Binding Path=Location, Converter={StaticResource int2FormattedHexConv}}" 
                                                            FontFamily="Courier New" Margin="6,3" VerticalAlignment="Center" />
                                            </Border>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </ListView>
            
                    <GridSplitter Grid.Column="3" Grid.RowSpan="99" />

                    <!-- Declaration and UnknownList1 -->
                    <ScrollViewer Grid.Column="4" Grid.Row="0" Grid.RowSpan="99" VerticalScrollBarVisibility="Auto">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="5" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                
                            <DockPanel Grid.Column="0" Grid.Row="0">
                                <Label DockPanel.Dock="Top">
                                    <TextBlock>
                                        <Run Text="Declaration Block (" />
                                        <TextBlock Text="{Binding Path=UassetFileVM.DeclarationBlock.Items.Count}" />
                                        <Run>//</Run>
                                        <TextBlock Text="{Binding Path=UassetFileVM.DeclarationBlock.Items.Count, Converter={StaticResource int2FormattedHexConv}}" />
                                        <Run>)</Run>
                                    </TextBlock>
                                </Label>
                                <DataGrid ItemsSource="{Binding Path=UassetFileVM.DeclarationBlock.Items}"
                                            AutoGenerateColumns="False" CanUserAddRows="False" CanUserResizeRows="False" IsReadOnly="True">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="Id" Binding="{Binding Id}" />
                                        <DataGridTextColumn Header="Namespace" Binding="{Binding Namespace}" />
                                        <DataGridTextColumn Header="Name" Binding="{Binding Name}" />
                                        <DataGridTextColumn Header="Type" Binding="{Binding Type}" />
                                        <DataGridTextColumn Header="Depends" Binding="{Binding Depends}" />
                                        <DataGridTextColumn Header="Item6" Binding="{Binding Item6}" />
                                        <DataGridTemplateColumn Header="Items">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <TextBlock ToolTipService.ToolTip="All items except item 4 are in hex form.">
                                                    <TextBlock Text="{Binding Items[0], Converter={StaticResource int2HexConv}}" /><Run Text=", " />
                                                    <TextBlock Text="{Binding Items[1], Converter={StaticResource int2HexConv}}" /><Run Text=", " />
                                                    <TextBlock Text="{Binding Items[2], Converter={StaticResource int2HexConv}}" /><Run Text=", " />
                                                    <TextBlock Text="{Binding Items[3], Converter={StaticResource int2HexConv}}" /><Run Text=", " />
                                                    <TextBlock Text="{Binding Items[4]}" /><Run Text=", " />
                                                    <TextBlock Text="{Binding Items[5], Converter={StaticResource int2HexConv}}" /><Run Text=", " />
                                                    <TextBlock Text="{Binding Items[6], Converter={StaticResource int2HexConv}}" />
                                                </TextBlock>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                    </DataGrid.Columns>
                                </DataGrid>
                            </DockPanel>
                

                            <GridSplitter Grid.Column="0" Grid.Row="1" BorderThickness="0,1" />

                            <DockPanel Grid.Column="0" Grid.Row="2">
                                <Label Content="Unknown List 1 (Content Metadata?)" DockPanel.Dock="Top" />
                                <DataGrid ItemsSource="{Binding Path=UassetFileVM.UnknownList1}" 
                                            AutoGenerateColumns="False" CanUserAddRows="False" CanUserResizeRows="False" IsReadOnly="True">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="Id" Binding="{Binding Id}" />
                                        <DataGridTextColumn Header="Name" Binding="{Binding Name}" />
                                        <DataGridTextColumn Header="Namespace" Binding="{Binding Namespace}" />
                                        <DataGridTextColumn Header="Size" Binding="{Binding Size}" />
                                        <DataGridTextColumn Header="Pointer to Content" Binding="{Binding PtrToContent, Converter={StaticResource int2FormattedHexConv}}" />
                                    </DataGrid.Columns>
                                </DataGrid>
                            </DockPanel>
                
                        </Grid>
                    </ScrollViewer>
            
                    <GridSplitter Grid.Column="5" Grid.RowSpan="99" />

                    <!-- Imports and UkDepends -->
                    <ScrollViewer Grid.Column="6" Grid.Row="0" Grid.RowSpan="99" VerticalScrollBarVisibility="Auto">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="7" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                    
                            <DockPanel Grid.Column="0" Grid.Row="0">
                                <Label DockPanel.Dock="Top">
                                    <TextBlock>
                                        <Run Text="Import Block (" />
                                        <TextBlock Text="{Binding Path=UassetFileVM.ImportBlock.Count}" />
                                        <Run>//</Run>
                                        <TextBlock Text="{Binding Path=UassetFileVM.ImportBlock.Count, Converter={StaticResource int2FormattedHexConv}}" />
                                        <Run>)</Run>
                                    </TextBlock>
                                </Label>
                                <DataGrid ItemsSource="{Binding Path=UassetFileVM.ImportBlock}" Grid.Column="6" Grid.Row="1"
                                        AutoGenerateColumns="False" CanUserAddRows="False" CanUserResizeRows="False" IsReadOnly="True">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="Id" Binding="{Binding ItemAsInt, Converter={StaticResource int2FormattedHexConv}}" />
                                        <DataGridTextColumn Header="StringList Value" Binding="{Binding ItemAsString}" />
                                    </DataGrid.Columns>
                                </DataGrid>
                            </DockPanel>

                            <GridSplitter Grid.Column="0" Grid.Row="1" BorderThickness="0,1" BorderBrush="Gray" />

                            <DockPanel Grid.Column="0" Grid.Row="2">
                                <Label DockPanel.Dock="Top">
                                    <TextBlock>
                                        <Run Text="UkDepends (" />
                                        <TextBlock Text="{Binding Path=UassetFileVM.UkDepends.Count}" />
                                        <Run>//</Run>
                                        <TextBlock Text="{Binding Path=UassetFileVM.UkDepends.Count, Converter={StaticResource int2FormattedHexConv}}" />
                                        <Run>)</Run>
                                    </TextBlock>
                                </Label>
                                <DataGrid ItemsSource="{Binding Path=UassetFileVM.UkDepends}" Grid.Column="6" Grid.Row="1"
                                        AutoGenerateColumns="False" CanUserAddRows="False" CanUserResizeRows="False" IsReadOnly="True">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="Value" Binding="{Binding}" />
                                    </DataGrid.Columns>
                                </DataGrid>
                            </DockPanel>
                    
                        </Grid>
                    </ScrollViewer>
            
                </Grid>

            </ScrollViewer>

        <GridSplitter Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="99" BorderBrush="#AAA" BorderThickness="0,1" />

        <!-- Tree View -->
        <Grid Grid.Column="0" Grid.Row="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
            </Grid.RowDefinitions>

            <Grid.Resources>
                <util:TreeViewDataTemplateSelector x:Key="tvDataTemplateSelector" />
            </Grid.Resources>

            <Label Grid.Column="0" Grid.Row="0" Content="Content Struct" />
            <TreeView Grid.Column="0" Grid.Row="1" 
                      ItemsSource="{Binding Path=TreeViewModel.TreeViewItems}" 
                      ItemTemplateSelector="{StaticResource tvDataTemplateSelector}"
                      ItemContainerStyle="{StaticResource treeViewItemStyle}">
                
                <!-- Item Data Templates -->
                <TreeView.Resources>
                    
                    <!-- Struct Property -->
                    <HierarchicalDataTemplate x:Key="ItemTemplateStructProperty"
                                              DataType="{x:Type vmcon:TreeViewItemViewModel}" 
                                              ItemsSource="{Binding Path=Children}">
                        <StackPanel Orientation="Vertical">
                            <TextBlock> 
                                "<TextBlock Text="{Binding DataItem.AttributeName}" />"
                                (<TextBlock Text="{Binding DataItem.PropertyName}" />)
                            </TextBlock>
                        </StackPanel>
                    </HierarchicalDataTemplate>
                    
                    <!-- Vector/Rotator Struct Property -->
                    <DataTemplate x:Key="ItemTemplateVectorStructProperty"
                                  DataType="{x:Type vmpt:VectorStructPropertyViewModel}" >
                        <StackPanel Orientation="Vertical">
                            <TextBlock>
                                "<TextBlock Text="{Binding Path=DataItem.AttributeName}" />"
                                (<TextBlock Text="{Binding Path=DataItem.PropertyName}" />)
                            </TextBlock>
                            <TextBlock Text ="Value:" Margin="10,0,0,0"/>
                            <TextBlock Margin="20,0,0,0" >
                                X: <TextBlock Text="{Binding Path=DataItem.X}" /> (<TextBlock Text="{Binding Path=DataItem.X, Converter={StaticResource float2FormattedHexConv}}" />)<LineBreak/>
                                Y: <TextBlock Text="{Binding Path=DataItem.Y}" /> (<TextBlock Text="{Binding Path=DataItem.Y, Converter={StaticResource float2FormattedHexConv}}" />)<LineBreak/>
                                Z: <TextBlock Text="{Binding Path=DataItem.Z}" /> (<TextBlock Text="{Binding Path=DataItem.Z, Converter={StaticResource float2FormattedHexConv}}" />)
                            </TextBlock>
                        </StackPanel>
                    </DataTemplate>
                    
                    <!-- Array Property -->
                    <HierarchicalDataTemplate x:Key="ItemTemplateArrayProperty"
                                              DataType="{x:Type vmpt:ArrayPropertyViewModel}"
                                              ItemsSource="{Binding Path=Children}" >
                        <StackPanel Orientation="Vertical">
                            <TextBlock>
                                "<TextBlock Text="{Binding Path=DataItem.AttributeName}" />"
                                (<TextBlock Text="{Binding Path=DataItem.PropertyName}" />)
                            </TextBlock>
                            <TextBlock Margin="10,0,0,0" FontStyle="Italic">
                                Property Type of Items: <TextBlock Text="{Binding Path=DataItem.PropertyType}" />
                                <LineBreak />
                                # of Items: <TextBlock Text="{Binding Path=DataItem.Items.Count}" />
                            </TextBlock>
                        </StackPanel>
                    </HierarchicalDataTemplate>
                    
                    <!-- Bool Property -->
                    <DataTemplate x:Key="ItemTemplateBoolProperty"
                                  DataType="{x:Type vmpt:BoolPropertyViewModel}" >
                        <StackPanel Orientation="Vertical">
                            <TextBlock>
                                "<TextBlock Text="{Binding Path=DataItem.AttributeName}" />"
                                (<TextBlock Text="{Binding Path=DataItem.PropertyName}" />)
                            </TextBlock>
                            <TextBlock Margin="10,0,0,0" >
                                Value: <TextBlock Text="{Binding Path=DataItem.Value}" />
                            </TextBlock>
                        </StackPanel>
                    </DataTemplate>
                    
                    <!-- Text Property -->
                    <DataTemplate x:Key="ItemTemplateTextProperty"
                                  DataType="{x:Type vmpt:TextPropertyViewModel}" >
                        <StackPanel Orientation="Vertical">
                            <TextBlock>
                                "<TextBlock Text="{Binding Path=DataItem.AttributeName}" />"
                                (<TextBlock Text="{Binding Path=DataItem.PropertyName}" />)
                            </TextBlock>
                            <TextBlock Margin="10,0,0,0" >
                                ID: <TextBlock Text="{Binding Path=DataItem.Id}" /><LineBreak />
                                UUID: "<TextBlock Text="{Binding Path=DataItem.Uuid}" />"<LineBreak />
                                Content: "<TextBlock Text="{Binding Path=DataItem.Content}" />"
                            </TextBlock>
                        </StackPanel>
                    </DataTemplate>
                    
                    <!-- Int Property -->
                    <DataTemplate x:Key="ItemTemplateIntProperty"
                                  DataType="{x:Type vmpt:IntPropertyViewModel}" >
                        <StackPanel Orientation="Vertical">
                            <TextBlock>
                                "<TextBlock Text="{Binding Path=DataItem.AttributeName}" />"
                                (<TextBlock Text="{Binding Path=DataItem.PropertyName}" />)
                            </TextBlock>
                            <TextBlock Margin="10,0,0,0" >
                                Value: <TextBlock Text="{Binding Path=DataItem.Value}" /> (<TextBlock Text="{Binding Path=DataItem.Value, Converter={StaticResource int2FormattedHexConv}}" />)
                            </TextBlock>
                        </StackPanel>
                    </DataTemplate>

                    <!-- Float Property -->
                    <DataTemplate x:Key="ItemTemplateFloatProperty"
                                  DataType="{x:Type vmpt:FloatPropertyViewModel}" >
                        <StackPanel Orientation="Vertical">
                            <TextBlock>
                                "<TextBlock Text="{Binding Path=DataItem.AttributeName}" />"
                                (<TextBlock Text="{Binding Path=DataItem.PropertyName}" />)
                            </TextBlock>
                            <TextBlock Margin="10,0,0,0" >
                                Value: <TextBlock Text="{Binding Path=DataItem.Value}" /> (<TextBlock Text="{Binding Path=DataItem.Value, Converter={StaticResource float2FormattedHexConv}}" />)
                            </TextBlock>
                        </StackPanel>
                    </DataTemplate>

                    <!-- Object Property -->
                    <DataTemplate x:Key="ItemTemplateObjectProperty"
                                  DataType="{x:Type vmpt:ObjectPropertyViewModel}">
                        <StackPanel Orientation="Vertical">
                            <TextBlock>
                                "<TextBlock Text="{Binding DataItem.AttributeName}" />" (<TextBlock Text="{Binding DataItem.PropertyName}" />)
                            </TextBlock>
                            <TextBlock Margin="14,4,0,0" >
                                <TextBlock Text="Value:" Margin="0,0,4,0" />
                                <TextBlock>
                                    <TextBlock Text="{Binding Path=DataItem.Id, Converter={StaticResource int2FormattedHexConv}}" />
                                    = "<TextBlock Text="{Binding Path=DataItem.Name}" />"
                                </TextBlock>
                            </TextBlock>
                        </StackPanel>
                    </DataTemplate>
                    
                    <!-- Byte Property (Array) -->
                    <DataTemplate x:Key="ItemTemplateArrayByteProperty"
                                  DataType="{x:Type vmpt:BytePropertyViewModel}">
                        <StackPanel Orientation="Vertical">
                            <TextBlock>
                                "<TextBlock Text="{Binding Path=DataItem.AttributeName}" />"
                                (<TextBlock Text="{Binding Path=DataItem.PropertyName}" />)
                            </TextBlock>
                            <TextBlock Margin="10,0,0,0" FontStyle="Italic" >
                                Number of bytes: <TextBlock Text="{Binding Path=DataItem.ByteArrayValue.Length}" />
                            </TextBlock>
                        </StackPanel>
                    </DataTemplate>
                    
                    <!-- Byte Property (Enum) -->
                    <DataTemplate x:Key="ItemTemplateEnumByteProperty"
                                  DataType="{x:Type vmpt:BytePropertyViewModel}">
                        <StackPanel Orientation="Vertical">
                            <TextBlock>
                                "<TextBlock Text="{Binding Path=DataItem.AttributeName}" />"
                                (<TextBlock Text="{Binding Path=DataItem.PropertyName}" />)
                            </TextBlock>
                            <TextBlock Margin="10,0,0,0" >
                                Enum Category: <TextBlock Text="{Binding Path=DataItem.EnumCategory}" />
                            </TextBlock>
                            <TextBlock Margin="10,0,0,0" >
                                Enum Value: <TextBlock Text="{Binding Path=DataItem.EnumValue}" />
                            </TextBlock>
                        </StackPanel>
                    </DataTemplate>
                    
                    <!-- String Property -->
                    <DataTemplate x:Key="ItemTemplateStringProperty"
                                  DataType="{x:Type vmpt:StringPropertyViewModel}">
                        <TextBlock>
                            "<TextBlock Text="{Binding Path=DataItem.AttributeName}" />"
                            (<TextBlock Text="{Binding Path=DataItem.PropertyName}" />)<LineBreak />
                            <TextBlock Margin="10,0,0,0">
                                Value: "<TextBlock Text="{Binding Path=DataItem.Value}" />"
                            </TextBlock>
                        </TextBlock>
                    </DataTemplate>
                    
                    <!-- Default Template -->
                    <DataTemplate x:Key="ItemTemplateDefault"
                                  DataType="{x:Type vmcon:TreeViewItemViewModel}">
                        <StackPanel Orientation="Vertical">
                            <TextBlock>
                                "<TextBlock Text="{Binding DataItem.AttributeName}" />" (<TextBlock Text="{Binding DataItem.PropertyName}" />)
                            </TextBlock>
                        </StackPanel>
                    </DataTemplate>
                    
                </TreeView.Resources>
                
            </TreeView>
            
        </Grid>
        
    </Grid>
</UserControl>
